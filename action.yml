name: 'Service build and push to ECR actions'
description: 'Service build and push to ECR actions'
outputs:
  image-tag:
    description: "Image Tag"
    value: ${{ steps.image-info.outputs.image-tag }}
  commit-message:
    description: "Commit Message"
    value: ${{ steps.image-info.outputs.commit-message }}
  ecr-repository:
    description: "ECR Repository"
    value: ${{ steps.image-info.outputs.ecr-repository }}
inputs:
  service:  
    description: 'Service Name'
    required: true
  gh-user:
    description: 'GitHub User'
    required: true
  gh-token:
    description: 'GitHub Token'
    required: true
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  aws-region:
    required: true
  go-private:
    required: true
  ecr-repository:
    required: true
  image-tag:
    description: 'Image Tag'
    default: ''
runs:
  using: "composite"
  steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18.8'
    - name: Go Config
      run: |
        git config --global url.https://x-access-token:${{ inputs.gh-token }}@github.com/.insteadOf https://github.com/
        echo "GOPRIVATE=${{ inputs.go-private }}" >> $GITHUB_ENV
      shell: bash
    - run: go version
      shell: bash
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - name: Build
      run: build.sh ${{ inputs.service }}
      shell: bash
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region:  ${{ inputs.aws-region }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Get image tag(verion)
      id: image
      run: |
        VERSION=$(echo ${{ github.sha }} | cut -c1-8)
        if [ "$GITHUB_REF_TYPE" == "tag" ]; then
          VERSION=$GITHUB_REF_NAME
        fi
        if [ $(echo "x${{ inputs.image-tag }}") != "x" ]; then
          VERSION=${{ inputs.image-tag }}
        fi
        echo VERSION=$VERSION
        echo "::set-output name=version::$VERSION"
      shell: bash
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
      platforms: 'arm64,arm64'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build, tag, and push image to Amazon ECR
      id: image-info
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
        IMAGE_TAG: ${{ steps.image.outputs.version }}
      run: |
        docker buildx build \
        --platform linux/amd64,linux/arm64 \
        --push -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "ecr-repository=$(echo $ECR_REPOSITORY)" >> $GITHUB_OUTPUT
        echo "image-tag=$(echo $IMAGE_TAG)" >> $GITHUB_OUTPUT
        echo "commit-message=$(git log --pretty=format:'[%an] %s' -1)" >> $GITHUB_OUTPUT
      shell: bash